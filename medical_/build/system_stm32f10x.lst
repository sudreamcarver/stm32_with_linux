ARM GAS  /tmp/cc4QVWH8.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f10x.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "./cmsis/system_stm32f10x.c"
  18              		.section	.text.SetSysClockTo72,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	SetSysClockTo72:
  25              	.LFB32:
   1:./cmsis/system_stm32f10x.c **** /**
   2:./cmsis/system_stm32f10x.c ****   ******************************************************************************
   3:./cmsis/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:./cmsis/system_stm32f10x.c ****   * @author  MCD Application Team
   5:./cmsis/system_stm32f10x.c ****   * @version V3.5.1
   6:./cmsis/system_stm32f10x.c ****   * @date    08-September-2021
   7:./cmsis/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:./cmsis/system_stm32f10x.c ****   * 
   9:./cmsis/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:./cmsis/system_stm32f10x.c ****   *     user application:
  11:./cmsis/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:./cmsis/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:./cmsis/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:./cmsis/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:./cmsis/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:./cmsis/system_stm32f10x.c ****   *
  17:./cmsis/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:./cmsis/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:./cmsis/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:./cmsis/system_stm32f10x.c ****   *                                     
  21:./cmsis/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:./cmsis/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:./cmsis/system_stm32f10x.c ****   *                                 during program execution.
  24:./cmsis/system_stm32f10x.c ****   *
  25:./cmsis/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:./cmsis/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:./cmsis/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:./cmsis/system_stm32f10x.c ****   *
  29:./cmsis/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:./cmsis/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:./cmsis/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:./cmsis/system_stm32f10x.c ****   *
  33:./cmsis/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
ARM GAS  /tmp/cc4QVWH8.s 			page 2


  34:./cmsis/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:./cmsis/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:./cmsis/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:./cmsis/system_stm32f10x.c ****   *    configuration.
  38:./cmsis/system_stm32f10x.c ****   *        
  39:./cmsis/system_stm32f10x.c ****   ******************************************************************************
  40:./cmsis/system_stm32f10x.c ****   * @attention
  41:./cmsis/system_stm32f10x.c ****   *
  42:./cmsis/system_stm32f10x.c ****   * Copyright (c) 2011 STMicroelectronics.
  43:./cmsis/system_stm32f10x.c ****   * All rights reserved.
  44:./cmsis/system_stm32f10x.c ****   *
  45:./cmsis/system_stm32f10x.c ****   * This software is licensed under terms that can be found in the LICENSE file
  46:./cmsis/system_stm32f10x.c ****   * in the root directory of this software component.
  47:./cmsis/system_stm32f10x.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  48:./cmsis/system_stm32f10x.c ****   *
  49:./cmsis/system_stm32f10x.c ****   ******************************************************************************
  50:./cmsis/system_stm32f10x.c ****   */
  51:./cmsis/system_stm32f10x.c **** 
  52:./cmsis/system_stm32f10x.c **** /** @addtogroup CMSIS
  53:./cmsis/system_stm32f10x.c ****   * @{
  54:./cmsis/system_stm32f10x.c ****   */
  55:./cmsis/system_stm32f10x.c **** 
  56:./cmsis/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  57:./cmsis/system_stm32f10x.c ****   * @{
  58:./cmsis/system_stm32f10x.c ****   */  
  59:./cmsis/system_stm32f10x.c ****   
  60:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  61:./cmsis/system_stm32f10x.c ****   * @{
  62:./cmsis/system_stm32f10x.c ****   */
  63:./cmsis/system_stm32f10x.c **** 
  64:./cmsis/system_stm32f10x.c **** #include "stm32f10x.h"
  65:./cmsis/system_stm32f10x.c **** 
  66:./cmsis/system_stm32f10x.c **** /**
  67:./cmsis/system_stm32f10x.c ****   * @}
  68:./cmsis/system_stm32f10x.c ****   */
  69:./cmsis/system_stm32f10x.c **** 
  70:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  71:./cmsis/system_stm32f10x.c ****   * @{
  72:./cmsis/system_stm32f10x.c ****   */
  73:./cmsis/system_stm32f10x.c **** 
  74:./cmsis/system_stm32f10x.c **** /**
  75:./cmsis/system_stm32f10x.c ****   * @}
  76:./cmsis/system_stm32f10x.c ****   */
  77:./cmsis/system_stm32f10x.c **** 
  78:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  79:./cmsis/system_stm32f10x.c ****   * @{
  80:./cmsis/system_stm32f10x.c ****   */
  81:./cmsis/system_stm32f10x.c **** 
  82:./cmsis/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  83:./cmsis/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  84:./cmsis/system_stm32f10x.c ****    
  85:./cmsis/system_stm32f10x.c ****    IMPORTANT NOTE:
  86:./cmsis/system_stm32f10x.c ****    ============== 
  87:./cmsis/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  88:./cmsis/system_stm32f10x.c **** 
  89:./cmsis/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  90:./cmsis/system_stm32f10x.c ****       maximum frequency.
ARM GAS  /tmp/cc4QVWH8.s 			page 3


  91:./cmsis/system_stm32f10x.c ****       
  92:./cmsis/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  93:./cmsis/system_stm32f10x.c ****     source.
  94:./cmsis/system_stm32f10x.c **** 
  95:./cmsis/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  96:./cmsis/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  97:./cmsis/system_stm32f10x.c ****           crystal is used to drive the System clock.
  98:./cmsis/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
  99:./cmsis/system_stm32f10x.c ****           used to drive the System clock.
 100:./cmsis/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 101:./cmsis/system_stm32f10x.c ****           the System clock.
 102:./cmsis/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 103:./cmsis/system_stm32f10x.c ****     */
 104:./cmsis/system_stm32f10x.c ****     
 105:./cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 106:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 107:./cmsis/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 108:./cmsis/system_stm32f10x.c **** #else
 109:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 110:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 111:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 112:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 113:./cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 114:./cmsis/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 115:./cmsis/system_stm32f10x.c **** #endif
 116:./cmsis/system_stm32f10x.c **** 
 117:./cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 118:./cmsis/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 119:./cmsis/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 120:./cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 121:./cmsis/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 122:./cmsis/system_stm32f10x.c **** #endif
 123:./cmsis/system_stm32f10x.c **** 
 124:./cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 125:./cmsis/system_stm32f10x.c ****      Internal SRAM. */ 
 126:./cmsis/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 127:./cmsis/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 128:./cmsis/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 129:./cmsis/system_stm32f10x.c **** 
 130:./cmsis/system_stm32f10x.c **** 
 131:./cmsis/system_stm32f10x.c **** /**
 132:./cmsis/system_stm32f10x.c ****   * @}
 133:./cmsis/system_stm32f10x.c ****   */
 134:./cmsis/system_stm32f10x.c **** 
 135:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 136:./cmsis/system_stm32f10x.c ****   * @{
 137:./cmsis/system_stm32f10x.c ****   */
 138:./cmsis/system_stm32f10x.c **** 
 139:./cmsis/system_stm32f10x.c **** /**
 140:./cmsis/system_stm32f10x.c ****   * @}
 141:./cmsis/system_stm32f10x.c ****   */
 142:./cmsis/system_stm32f10x.c **** 
 143:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 144:./cmsis/system_stm32f10x.c ****   * @{
 145:./cmsis/system_stm32f10x.c ****   */
 146:./cmsis/system_stm32f10x.c **** 
 147:./cmsis/system_stm32f10x.c **** /*******************************************************************************
ARM GAS  /tmp/cc4QVWH8.s 			page 4


 148:./cmsis/system_stm32f10x.c **** *  Clock Definitions
 149:./cmsis/system_stm32f10x.c **** *******************************************************************************/
 150:./cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 151:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 152:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 153:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 154:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 155:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 156:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 157:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 158:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 159:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 160:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 161:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 162:./cmsis/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 163:./cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 164:./cmsis/system_stm32f10x.c **** #endif
 165:./cmsis/system_stm32f10x.c **** 
 166:./cmsis/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 167:./cmsis/system_stm32f10x.c **** /**
 168:./cmsis/system_stm32f10x.c ****   * @}
 169:./cmsis/system_stm32f10x.c ****   */
 170:./cmsis/system_stm32f10x.c **** 
 171:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 172:./cmsis/system_stm32f10x.c ****   * @{
 173:./cmsis/system_stm32f10x.c ****   */
 174:./cmsis/system_stm32f10x.c **** 
 175:./cmsis/system_stm32f10x.c **** static void SetSysClock(void);
 176:./cmsis/system_stm32f10x.c **** 
 177:./cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 178:./cmsis/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 179:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 180:./cmsis/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 181:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 182:./cmsis/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 183:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 184:./cmsis/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 185:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 186:./cmsis/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 187:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 188:./cmsis/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 189:./cmsis/system_stm32f10x.c **** #endif
 190:./cmsis/system_stm32f10x.c **** 
 191:./cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 192:./cmsis/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 193:./cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 194:./cmsis/system_stm32f10x.c **** 
 195:./cmsis/system_stm32f10x.c **** /**
 196:./cmsis/system_stm32f10x.c ****   * @}
 197:./cmsis/system_stm32f10x.c ****   */
 198:./cmsis/system_stm32f10x.c **** 
 199:./cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 200:./cmsis/system_stm32f10x.c ****   * @{
 201:./cmsis/system_stm32f10x.c ****   */
 202:./cmsis/system_stm32f10x.c **** 
 203:./cmsis/system_stm32f10x.c **** /**
 204:./cmsis/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
ARM GAS  /tmp/cc4QVWH8.s 			page 5


 205:./cmsis/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 206:./cmsis/system_stm32f10x.c ****   *         SystemCoreClock variable.
 207:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 208:./cmsis/system_stm32f10x.c ****   * @param  None
 209:./cmsis/system_stm32f10x.c ****   * @retval None
 210:./cmsis/system_stm32f10x.c ****   */
 211:./cmsis/system_stm32f10x.c **** void SystemInit (void)
 212:./cmsis/system_stm32f10x.c **** {
 213:./cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 214:./cmsis/system_stm32f10x.c ****   /* Set HSION bit */
 215:./cmsis/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 216:./cmsis/system_stm32f10x.c **** 
 217:./cmsis/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 218:./cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 219:./cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 220:./cmsis/system_stm32f10x.c **** #else
 221:./cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 222:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 223:./cmsis/system_stm32f10x.c ****   
 224:./cmsis/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 225:./cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 226:./cmsis/system_stm32f10x.c **** 
 227:./cmsis/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 228:./cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 229:./cmsis/system_stm32f10x.c **** 
 230:./cmsis/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 231:./cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 232:./cmsis/system_stm32f10x.c **** 
 233:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 234:./cmsis/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 235:./cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 236:./cmsis/system_stm32f10x.c **** 
 237:./cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 238:./cmsis/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 239:./cmsis/system_stm32f10x.c **** 
 240:./cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 241:./cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 242:./cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 243:./cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 244:./cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 245:./cmsis/system_stm32f10x.c **** 
 246:./cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 247:./cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 248:./cmsis/system_stm32f10x.c **** #else
 249:./cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 250:./cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 251:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 252:./cmsis/system_stm32f10x.c ****     
 253:./cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 254:./cmsis/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 255:./cmsis/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 256:./cmsis/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 257:./cmsis/system_stm32f10x.c **** #endif 
 258:./cmsis/system_stm32f10x.c **** 
 259:./cmsis/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 260:./cmsis/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 261:./cmsis/system_stm32f10x.c ****   SetSysClock();
ARM GAS  /tmp/cc4QVWH8.s 			page 6


 262:./cmsis/system_stm32f10x.c **** 
 263:./cmsis/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 264:./cmsis/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 265:./cmsis/system_stm32f10x.c **** #else
 266:./cmsis/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 267:./cmsis/system_stm32f10x.c **** #endif 
 268:./cmsis/system_stm32f10x.c **** }
 269:./cmsis/system_stm32f10x.c **** 
 270:./cmsis/system_stm32f10x.c **** /**
 271:./cmsis/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 272:./cmsis/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 273:./cmsis/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 274:./cmsis/system_stm32f10x.c ****   *         other parameters.
 275:./cmsis/system_stm32f10x.c ****   *           
 276:./cmsis/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 277:./cmsis/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 278:./cmsis/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 279:./cmsis/system_stm32f10x.c ****   *     
 280:./cmsis/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 281:./cmsis/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 282:./cmsis/system_stm32f10x.c ****   *           constant and the selected clock source:
 283:./cmsis/system_stm32f10x.c ****   *             
 284:./cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 285:./cmsis/system_stm32f10x.c ****   *                                              
 286:./cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 287:./cmsis/system_stm32f10x.c ****   *                          
 288:./cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 289:./cmsis/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 290:./cmsis/system_stm32f10x.c ****   *         
 291:./cmsis/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 292:./cmsis/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 293:./cmsis/system_stm32f10x.c ****   *             in voltage and temperature.   
 294:./cmsis/system_stm32f10x.c ****   *    
 295:./cmsis/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 296:./cmsis/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 297:./cmsis/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 298:./cmsis/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 299:./cmsis/system_stm32f10x.c ****   *                
 300:./cmsis/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 301:./cmsis/system_stm32f10x.c ****   *           value for HSE crystal.
 302:./cmsis/system_stm32f10x.c ****   * @param  None
 303:./cmsis/system_stm32f10x.c ****   * @retval None
 304:./cmsis/system_stm32f10x.c ****   */
 305:./cmsis/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 306:./cmsis/system_stm32f10x.c **** {
 307:./cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 308:./cmsis/system_stm32f10x.c **** 
 309:./cmsis/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 310:./cmsis/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 311:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 312:./cmsis/system_stm32f10x.c **** 
 313:./cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 314:./cmsis/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 315:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 316:./cmsis/system_stm32f10x.c ****     
 317:./cmsis/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 318:./cmsis/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
ARM GAS  /tmp/cc4QVWH8.s 			page 7


 319:./cmsis/system_stm32f10x.c ****   
 320:./cmsis/system_stm32f10x.c ****   switch (tmp)
 321:./cmsis/system_stm32f10x.c ****   {
 322:./cmsis/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 323:./cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 324:./cmsis/system_stm32f10x.c ****       break;
 325:./cmsis/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 326:./cmsis/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 327:./cmsis/system_stm32f10x.c ****       break;
 328:./cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 329:./cmsis/system_stm32f10x.c **** 
 330:./cmsis/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 331:./cmsis/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 332:./cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 333:./cmsis/system_stm32f10x.c ****       
 334:./cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 335:./cmsis/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 336:./cmsis/system_stm32f10x.c ****       
 337:./cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 338:./cmsis/system_stm32f10x.c ****       {
 339:./cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 340:./cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 341:./cmsis/system_stm32f10x.c ****       }
 342:./cmsis/system_stm32f10x.c ****       else
 343:./cmsis/system_stm32f10x.c ****       {
 344:./cmsis/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 345:./cmsis/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 346:./cmsis/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 347:./cmsis/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 348:./cmsis/system_stm32f10x.c ****  #else
 349:./cmsis/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 350:./cmsis/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 351:./cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 352:./cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 353:./cmsis/system_stm32f10x.c ****         }
 354:./cmsis/system_stm32f10x.c ****         else
 355:./cmsis/system_stm32f10x.c ****         {
 356:./cmsis/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 357:./cmsis/system_stm32f10x.c ****         }
 358:./cmsis/system_stm32f10x.c ****  #endif
 359:./cmsis/system_stm32f10x.c ****       }
 360:./cmsis/system_stm32f10x.c **** #else
 361:./cmsis/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 362:./cmsis/system_stm32f10x.c ****       
 363:./cmsis/system_stm32f10x.c ****       if (pllmull != 0x0D)
 364:./cmsis/system_stm32f10x.c ****       {
 365:./cmsis/system_stm32f10x.c ****          pllmull += 2;
 366:./cmsis/system_stm32f10x.c ****       }
 367:./cmsis/system_stm32f10x.c ****       else
 368:./cmsis/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 369:./cmsis/system_stm32f10x.c ****         pllmull = 13 / 2; 
 370:./cmsis/system_stm32f10x.c ****       }
 371:./cmsis/system_stm32f10x.c ****             
 372:./cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 373:./cmsis/system_stm32f10x.c ****       {
 374:./cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 375:./cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
ARM GAS  /tmp/cc4QVWH8.s 			page 8


 376:./cmsis/system_stm32f10x.c ****       }
 377:./cmsis/system_stm32f10x.c ****       else
 378:./cmsis/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 379:./cmsis/system_stm32f10x.c ****         
 380:./cmsis/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 381:./cmsis/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 382:./cmsis/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 383:./cmsis/system_stm32f10x.c ****         
 384:./cmsis/system_stm32f10x.c ****         if (prediv1source == 0)
 385:./cmsis/system_stm32f10x.c ****         { 
 386:./cmsis/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 387:./cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 388:./cmsis/system_stm32f10x.c ****         }
 389:./cmsis/system_stm32f10x.c ****         else
 390:./cmsis/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 391:./cmsis/system_stm32f10x.c ****           
 392:./cmsis/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 393:./cmsis/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 394:./cmsis/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 395:./cmsis/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 396:./cmsis/system_stm32f10x.c ****         }
 397:./cmsis/system_stm32f10x.c ****       }
 398:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 399:./cmsis/system_stm32f10x.c ****       break;
 400:./cmsis/system_stm32f10x.c **** 
 401:./cmsis/system_stm32f10x.c ****     default:
 402:./cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 403:./cmsis/system_stm32f10x.c ****       break;
 404:./cmsis/system_stm32f10x.c ****   }
 405:./cmsis/system_stm32f10x.c ****   
 406:./cmsis/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 407:./cmsis/system_stm32f10x.c ****   /* Get HCLK prescaler */
 408:./cmsis/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 409:./cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 410:./cmsis/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 411:./cmsis/system_stm32f10x.c **** }
 412:./cmsis/system_stm32f10x.c **** 
 413:./cmsis/system_stm32f10x.c **** /**
 414:./cmsis/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 415:./cmsis/system_stm32f10x.c ****   * @param  None
 416:./cmsis/system_stm32f10x.c ****   * @retval None
 417:./cmsis/system_stm32f10x.c ****   */
 418:./cmsis/system_stm32f10x.c **** static void SetSysClock(void)
 419:./cmsis/system_stm32f10x.c **** {
 420:./cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 421:./cmsis/system_stm32f10x.c ****   SetSysClockToHSE();
 422:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 423:./cmsis/system_stm32f10x.c ****   SetSysClockTo24();
 424:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 425:./cmsis/system_stm32f10x.c ****   SetSysClockTo36();
 426:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 427:./cmsis/system_stm32f10x.c ****   SetSysClockTo48();
 428:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 429:./cmsis/system_stm32f10x.c ****   SetSysClockTo56();  
 430:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 431:./cmsis/system_stm32f10x.c ****   SetSysClockTo72();
 432:./cmsis/system_stm32f10x.c **** #endif
ARM GAS  /tmp/cc4QVWH8.s 			page 9


 433:./cmsis/system_stm32f10x.c ****  
 434:./cmsis/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 435:./cmsis/system_stm32f10x.c ****     source (default after reset) */ 
 436:./cmsis/system_stm32f10x.c **** }
 437:./cmsis/system_stm32f10x.c **** 
 438:./cmsis/system_stm32f10x.c **** /**
 439:./cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 440:./cmsis/system_stm32f10x.c ****   *          before jump to __main
 441:./cmsis/system_stm32f10x.c ****   * @param  None
 442:./cmsis/system_stm32f10x.c ****   * @retval None
 443:./cmsis/system_stm32f10x.c ****   */ 
 444:./cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 445:./cmsis/system_stm32f10x.c **** /**
 446:./cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 447:./cmsis/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 448:./cmsis/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 449:./cmsis/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 450:./cmsis/system_stm32f10x.c ****   *         data memory (including heap and stack).
 451:./cmsis/system_stm32f10x.c ****   * @param  None
 452:./cmsis/system_stm32f10x.c ****   * @retval None
 453:./cmsis/system_stm32f10x.c ****   */ 
 454:./cmsis/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 455:./cmsis/system_stm32f10x.c **** {
 456:./cmsis/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 457:./cmsis/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 458:./cmsis/system_stm32f10x.c **** 
 459:./cmsis/system_stm32f10x.c ****   /* Enable FSMC clock */
 460:./cmsis/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 461:./cmsis/system_stm32f10x.c ****   
 462:./cmsis/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 463:./cmsis/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 464:./cmsis/system_stm32f10x.c ****   
 465:./cmsis/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 466:./cmsis/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 467:./cmsis/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 468:./cmsis/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 469:./cmsis/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 470:./cmsis/system_stm32f10x.c ****   
 471:./cmsis/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 472:./cmsis/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 473:./cmsis/system_stm32f10x.c **** 
 474:./cmsis/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 475:./cmsis/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 476:./cmsis/system_stm32f10x.c **** 
 477:./cmsis/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 478:./cmsis/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 479:./cmsis/system_stm32f10x.c **** 
 480:./cmsis/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 481:./cmsis/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 482:./cmsis/system_stm32f10x.c ****    
 483:./cmsis/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 484:./cmsis/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 485:./cmsis/system_stm32f10x.c ****   
 486:./cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 487:./cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 488:./cmsis/system_stm32f10x.c **** }
 489:./cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
ARM GAS  /tmp/cc4QVWH8.s 			page 10


 490:./cmsis/system_stm32f10x.c **** 
 491:./cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 492:./cmsis/system_stm32f10x.c **** /**
 493:./cmsis/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 494:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 495:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 496:./cmsis/system_stm32f10x.c ****   * @param  None
 497:./cmsis/system_stm32f10x.c ****   * @retval None
 498:./cmsis/system_stm32f10x.c ****   */
 499:./cmsis/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 500:./cmsis/system_stm32f10x.c **** {
 501:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 502:./cmsis/system_stm32f10x.c ****   
 503:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 504:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 505:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 506:./cmsis/system_stm32f10x.c ****  
 507:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 508:./cmsis/system_stm32f10x.c ****   do
 509:./cmsis/system_stm32f10x.c ****   {
 510:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 511:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 512:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 513:./cmsis/system_stm32f10x.c **** 
 514:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 515:./cmsis/system_stm32f10x.c ****   {
 516:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 517:./cmsis/system_stm32f10x.c ****   }
 518:./cmsis/system_stm32f10x.c ****   else
 519:./cmsis/system_stm32f10x.c ****   {
 520:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 521:./cmsis/system_stm32f10x.c ****   }  
 522:./cmsis/system_stm32f10x.c **** 
 523:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 524:./cmsis/system_stm32f10x.c ****   {
 525:./cmsis/system_stm32f10x.c **** 
 526:./cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 527:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 528:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 529:./cmsis/system_stm32f10x.c **** 
 530:./cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 531:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 532:./cmsis/system_stm32f10x.c **** 
 533:./cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 534:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 535:./cmsis/system_stm32f10x.c **** #else
 536:./cmsis/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 537:./cmsis/system_stm32f10x.c **** 	{
 538:./cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 539:./cmsis/system_stm32f10x.c **** 	}
 540:./cmsis/system_stm32f10x.c **** 	else
 541:./cmsis/system_stm32f10x.c **** 	{
 542:./cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 543:./cmsis/system_stm32f10x.c **** 	}
 544:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 545:./cmsis/system_stm32f10x.c **** #endif
 546:./cmsis/system_stm32f10x.c ****  
ARM GAS  /tmp/cc4QVWH8.s 			page 11


 547:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 548:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 549:./cmsis/system_stm32f10x.c ****       
 550:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 551:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 552:./cmsis/system_stm32f10x.c ****     
 553:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 554:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 555:./cmsis/system_stm32f10x.c ****     
 556:./cmsis/system_stm32f10x.c ****     /* Select HSE as system clock source */
 557:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 558:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 559:./cmsis/system_stm32f10x.c **** 
 560:./cmsis/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 561:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 562:./cmsis/system_stm32f10x.c ****     {
 563:./cmsis/system_stm32f10x.c ****     }
 564:./cmsis/system_stm32f10x.c ****   }
 565:./cmsis/system_stm32f10x.c ****   else
 566:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 567:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 568:./cmsis/system_stm32f10x.c ****   }  
 569:./cmsis/system_stm32f10x.c **** }
 570:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 571:./cmsis/system_stm32f10x.c **** /**
 572:./cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 573:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 574:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 575:./cmsis/system_stm32f10x.c ****   * @param  None
 576:./cmsis/system_stm32f10x.c ****   * @retval None
 577:./cmsis/system_stm32f10x.c ****   */
 578:./cmsis/system_stm32f10x.c **** static void SetSysClockTo24(void)
 579:./cmsis/system_stm32f10x.c **** {
 580:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 581:./cmsis/system_stm32f10x.c ****   
 582:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 583:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 584:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 585:./cmsis/system_stm32f10x.c ****  
 586:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 587:./cmsis/system_stm32f10x.c ****   do
 588:./cmsis/system_stm32f10x.c ****   {
 589:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 590:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 591:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 592:./cmsis/system_stm32f10x.c **** 
 593:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 594:./cmsis/system_stm32f10x.c ****   {
 595:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 596:./cmsis/system_stm32f10x.c ****   }
 597:./cmsis/system_stm32f10x.c ****   else
 598:./cmsis/system_stm32f10x.c ****   {
 599:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 600:./cmsis/system_stm32f10x.c ****   }  
 601:./cmsis/system_stm32f10x.c **** 
 602:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 603:./cmsis/system_stm32f10x.c ****   {
ARM GAS  /tmp/cc4QVWH8.s 			page 12


 604:./cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 605:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 606:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 607:./cmsis/system_stm32f10x.c **** 
 608:./cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 609:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 610:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 611:./cmsis/system_stm32f10x.c **** #endif
 612:./cmsis/system_stm32f10x.c ****  
 613:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 614:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 615:./cmsis/system_stm32f10x.c ****       
 616:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 617:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 618:./cmsis/system_stm32f10x.c ****     
 619:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 620:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 621:./cmsis/system_stm32f10x.c ****     
 622:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 623:./cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 624:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 625:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 626:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 627:./cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 628:./cmsis/system_stm32f10x.c **** 
 629:./cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 630:./cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 631:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 632:./cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 633:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 634:./cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 635:./cmsis/system_stm32f10x.c ****   
 636:./cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 637:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 638:./cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 639:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 640:./cmsis/system_stm32f10x.c ****     {
 641:./cmsis/system_stm32f10x.c ****     }   
 642:./cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 643:./cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 644:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 645:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 646:./cmsis/system_stm32f10x.c **** #else    
 647:./cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 648:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 649:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 650:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 651:./cmsis/system_stm32f10x.c **** 
 652:./cmsis/system_stm32f10x.c ****     /* Enable PLL */
 653:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 654:./cmsis/system_stm32f10x.c **** 
 655:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 656:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 657:./cmsis/system_stm32f10x.c ****     {
 658:./cmsis/system_stm32f10x.c ****     }
 659:./cmsis/system_stm32f10x.c **** 
 660:./cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
ARM GAS  /tmp/cc4QVWH8.s 			page 13


 661:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 662:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 663:./cmsis/system_stm32f10x.c **** 
 664:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 665:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 666:./cmsis/system_stm32f10x.c ****     {
 667:./cmsis/system_stm32f10x.c ****     }
 668:./cmsis/system_stm32f10x.c ****   }
 669:./cmsis/system_stm32f10x.c ****   else
 670:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 671:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 672:./cmsis/system_stm32f10x.c ****   } 
 673:./cmsis/system_stm32f10x.c **** }
 674:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 675:./cmsis/system_stm32f10x.c **** /**
 676:./cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 677:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 678:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 679:./cmsis/system_stm32f10x.c ****   * @param  None
 680:./cmsis/system_stm32f10x.c ****   * @retval None
 681:./cmsis/system_stm32f10x.c ****   */
 682:./cmsis/system_stm32f10x.c **** static void SetSysClockTo36(void)
 683:./cmsis/system_stm32f10x.c **** {
 684:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 685:./cmsis/system_stm32f10x.c ****   
 686:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 687:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 688:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 689:./cmsis/system_stm32f10x.c ****  
 690:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 691:./cmsis/system_stm32f10x.c ****   do
 692:./cmsis/system_stm32f10x.c ****   {
 693:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 694:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 695:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 696:./cmsis/system_stm32f10x.c **** 
 697:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 698:./cmsis/system_stm32f10x.c ****   {
 699:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 700:./cmsis/system_stm32f10x.c ****   }
 701:./cmsis/system_stm32f10x.c ****   else
 702:./cmsis/system_stm32f10x.c ****   {
 703:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 704:./cmsis/system_stm32f10x.c ****   }  
 705:./cmsis/system_stm32f10x.c **** 
 706:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 707:./cmsis/system_stm32f10x.c ****   {
 708:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 709:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 710:./cmsis/system_stm32f10x.c **** 
 711:./cmsis/system_stm32f10x.c ****     /* Flash 1 wait state */
 712:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 713:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 714:./cmsis/system_stm32f10x.c ****  
 715:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 716:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 717:./cmsis/system_stm32f10x.c ****       
ARM GAS  /tmp/cc4QVWH8.s 			page 14


 718:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 719:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 720:./cmsis/system_stm32f10x.c ****     
 721:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 722:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 723:./cmsis/system_stm32f10x.c ****     
 724:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 725:./cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 726:./cmsis/system_stm32f10x.c ****     
 727:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 728:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 729:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 730:./cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 731:./cmsis/system_stm32f10x.c **** 
 732:./cmsis/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 733:./cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 734:./cmsis/system_stm32f10x.c ****         
 735:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 736:./cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 737:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 738:./cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 739:./cmsis/system_stm32f10x.c ****   
 740:./cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 741:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 742:./cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 743:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 744:./cmsis/system_stm32f10x.c ****     {
 745:./cmsis/system_stm32f10x.c ****     }
 746:./cmsis/system_stm32f10x.c ****     
 747:./cmsis/system_stm32f10x.c **** #else    
 748:./cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 749:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 750:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 751:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 752:./cmsis/system_stm32f10x.c **** 
 753:./cmsis/system_stm32f10x.c ****     /* Enable PLL */
 754:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 755:./cmsis/system_stm32f10x.c **** 
 756:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 757:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 758:./cmsis/system_stm32f10x.c ****     {
 759:./cmsis/system_stm32f10x.c ****     }
 760:./cmsis/system_stm32f10x.c **** 
 761:./cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 762:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 763:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 764:./cmsis/system_stm32f10x.c **** 
 765:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 766:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 767:./cmsis/system_stm32f10x.c ****     {
 768:./cmsis/system_stm32f10x.c ****     }
 769:./cmsis/system_stm32f10x.c ****   }
 770:./cmsis/system_stm32f10x.c ****   else
 771:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 772:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 773:./cmsis/system_stm32f10x.c ****   } 
 774:./cmsis/system_stm32f10x.c **** }
ARM GAS  /tmp/cc4QVWH8.s 			page 15


 775:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 776:./cmsis/system_stm32f10x.c **** /**
 777:./cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 778:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 779:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 780:./cmsis/system_stm32f10x.c ****   * @param  None
 781:./cmsis/system_stm32f10x.c ****   * @retval None
 782:./cmsis/system_stm32f10x.c ****   */
 783:./cmsis/system_stm32f10x.c **** static void SetSysClockTo48(void)
 784:./cmsis/system_stm32f10x.c **** {
 785:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 786:./cmsis/system_stm32f10x.c ****   
 787:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 788:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 789:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 790:./cmsis/system_stm32f10x.c ****  
 791:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 792:./cmsis/system_stm32f10x.c ****   do
 793:./cmsis/system_stm32f10x.c ****   {
 794:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 795:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 796:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 797:./cmsis/system_stm32f10x.c **** 
 798:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 799:./cmsis/system_stm32f10x.c ****   {
 800:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 801:./cmsis/system_stm32f10x.c ****   }
 802:./cmsis/system_stm32f10x.c ****   else
 803:./cmsis/system_stm32f10x.c ****   {
 804:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 805:./cmsis/system_stm32f10x.c ****   }  
 806:./cmsis/system_stm32f10x.c **** 
 807:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 808:./cmsis/system_stm32f10x.c ****   {
 809:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 810:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 811:./cmsis/system_stm32f10x.c **** 
 812:./cmsis/system_stm32f10x.c ****     /* Flash 1 wait state */
 813:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 814:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 815:./cmsis/system_stm32f10x.c ****  
 816:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 817:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 818:./cmsis/system_stm32f10x.c ****       
 819:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 820:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 821:./cmsis/system_stm32f10x.c ****     
 822:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 823:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 824:./cmsis/system_stm32f10x.c ****     
 825:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 826:./cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 827:./cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 828:./cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 829:./cmsis/system_stm32f10x.c ****         
 830:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 831:./cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
ARM GAS  /tmp/cc4QVWH8.s 			page 16


 832:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 833:./cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 834:./cmsis/system_stm32f10x.c ****   
 835:./cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 836:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 837:./cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 838:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 839:./cmsis/system_stm32f10x.c ****     {
 840:./cmsis/system_stm32f10x.c ****     }
 841:./cmsis/system_stm32f10x.c ****     
 842:./cmsis/system_stm32f10x.c ****    
 843:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 844:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 845:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 846:./cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 847:./cmsis/system_stm32f10x.c **** #else    
 848:./cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 849:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 850:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 851:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 852:./cmsis/system_stm32f10x.c **** 
 853:./cmsis/system_stm32f10x.c ****     /* Enable PLL */
 854:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 855:./cmsis/system_stm32f10x.c **** 
 856:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 857:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 858:./cmsis/system_stm32f10x.c ****     {
 859:./cmsis/system_stm32f10x.c ****     }
 860:./cmsis/system_stm32f10x.c **** 
 861:./cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 862:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 863:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 864:./cmsis/system_stm32f10x.c **** 
 865:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 866:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 867:./cmsis/system_stm32f10x.c ****     {
 868:./cmsis/system_stm32f10x.c ****     }
 869:./cmsis/system_stm32f10x.c ****   }
 870:./cmsis/system_stm32f10x.c ****   else
 871:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 872:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 873:./cmsis/system_stm32f10x.c ****   } 
 874:./cmsis/system_stm32f10x.c **** }
 875:./cmsis/system_stm32f10x.c **** 
 876:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 877:./cmsis/system_stm32f10x.c **** /**
 878:./cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 879:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 880:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 881:./cmsis/system_stm32f10x.c ****   * @param  None
 882:./cmsis/system_stm32f10x.c ****   * @retval None
 883:./cmsis/system_stm32f10x.c ****   */
 884:./cmsis/system_stm32f10x.c **** static void SetSysClockTo56(void)
 885:./cmsis/system_stm32f10x.c **** {
 886:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 887:./cmsis/system_stm32f10x.c ****   
 888:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
ARM GAS  /tmp/cc4QVWH8.s 			page 17


 889:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 890:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 891:./cmsis/system_stm32f10x.c ****  
 892:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 893:./cmsis/system_stm32f10x.c ****   do
 894:./cmsis/system_stm32f10x.c ****   {
 895:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 896:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 897:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 898:./cmsis/system_stm32f10x.c **** 
 899:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 900:./cmsis/system_stm32f10x.c ****   {
 901:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 902:./cmsis/system_stm32f10x.c ****   }
 903:./cmsis/system_stm32f10x.c ****   else
 904:./cmsis/system_stm32f10x.c ****   {
 905:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 906:./cmsis/system_stm32f10x.c ****   }  
 907:./cmsis/system_stm32f10x.c **** 
 908:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 909:./cmsis/system_stm32f10x.c ****   {
 910:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 911:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 912:./cmsis/system_stm32f10x.c **** 
 913:./cmsis/system_stm32f10x.c ****     /* Flash 2 wait state */
 914:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 915:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 916:./cmsis/system_stm32f10x.c ****  
 917:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 918:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 919:./cmsis/system_stm32f10x.c ****       
 920:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 921:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 922:./cmsis/system_stm32f10x.c ****     
 923:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 924:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 925:./cmsis/system_stm32f10x.c **** 
 926:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 927:./cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 928:./cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 929:./cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 930:./cmsis/system_stm32f10x.c ****         
 931:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 932:./cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 933:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 934:./cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 935:./cmsis/system_stm32f10x.c ****   
 936:./cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 937:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 938:./cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 939:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 940:./cmsis/system_stm32f10x.c ****     {
 941:./cmsis/system_stm32f10x.c ****     }
 942:./cmsis/system_stm32f10x.c ****     
 943:./cmsis/system_stm32f10x.c ****    
 944:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 945:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
ARM GAS  /tmp/cc4QVWH8.s 			page 18


 946:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 947:./cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 948:./cmsis/system_stm32f10x.c **** #else     
 949:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 950:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 951:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 952:./cmsis/system_stm32f10x.c **** 
 953:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 954:./cmsis/system_stm32f10x.c **** 
 955:./cmsis/system_stm32f10x.c ****     /* Enable PLL */
 956:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 957:./cmsis/system_stm32f10x.c **** 
 958:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 959:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 960:./cmsis/system_stm32f10x.c ****     {
 961:./cmsis/system_stm32f10x.c ****     }
 962:./cmsis/system_stm32f10x.c **** 
 963:./cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 964:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 965:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 966:./cmsis/system_stm32f10x.c **** 
 967:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 968:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 969:./cmsis/system_stm32f10x.c ****     {
 970:./cmsis/system_stm32f10x.c ****     }
 971:./cmsis/system_stm32f10x.c ****   }
 972:./cmsis/system_stm32f10x.c ****   else
 973:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 974:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 975:./cmsis/system_stm32f10x.c ****   } 
 976:./cmsis/system_stm32f10x.c **** }
 977:./cmsis/system_stm32f10x.c **** 
 978:./cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 979:./cmsis/system_stm32f10x.c **** /**
 980:./cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 981:./cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 982:./cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 983:./cmsis/system_stm32f10x.c ****   * @param  None
 984:./cmsis/system_stm32f10x.c ****   * @retval None
 985:./cmsis/system_stm32f10x.c ****   */
 986:./cmsis/system_stm32f10x.c **** static void SetSysClockTo72(void)
 987:./cmsis/system_stm32f10x.c **** {
  26              		.loc 1 987 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 988:./cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  34              		.loc 1 988 3 view .LVU1
  35              		.loc 1 988 17 is_stmt 0 view .LVU2
  36 0002 0023     		movs	r3, #0
  37 0004 0193     		str	r3, [sp, #4]
  38              		.loc 1 988 37 view .LVU3
  39 0006 0093     		str	r3, [sp]
ARM GAS  /tmp/cc4QVWH8.s 			page 19


 989:./cmsis/system_stm32f10x.c ****   
 990:./cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 991:./cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 992:./cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  40              		.loc 1 992 3 is_stmt 1 view .LVU4
  41              		.loc 1 992 6 is_stmt 0 view .LVU5
  42 0008 2D4A     		ldr	r2, .L11
  43 000a 1368     		ldr	r3, [r2]
  44              		.loc 1 992 11 view .LVU6
  45 000c 43F48033 		orr	r3, r3, #65536
  46 0010 1360     		str	r3, [r2]
  47              	.L3:
 993:./cmsis/system_stm32f10x.c ****  
 994:./cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 995:./cmsis/system_stm32f10x.c ****   do
  48              		.loc 1 995 3 is_stmt 1 view .LVU7
 996:./cmsis/system_stm32f10x.c ****   {
 997:./cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  49              		.loc 1 997 5 view .LVU8
  50              		.loc 1 997 20 is_stmt 0 view .LVU9
  51 0012 2B4B     		ldr	r3, .L11
  52 0014 1B68     		ldr	r3, [r3]
  53              		.loc 1 997 25 view .LVU10
  54 0016 03F40033 		and	r3, r3, #131072
  55              		.loc 1 997 15 view .LVU11
  56 001a 0093     		str	r3, [sp]
 998:./cmsis/system_stm32f10x.c ****     StartUpCounter++;  
  57              		.loc 1 998 5 is_stmt 1 view .LVU12
  58              		.loc 1 998 19 is_stmt 0 view .LVU13
  59 001c 019B     		ldr	r3, [sp, #4]
  60 001e 0133     		adds	r3, r3, #1
  61 0020 0193     		str	r3, [sp, #4]
 999:./cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  62              		.loc 1 999 28 is_stmt 1 discriminator 2 view .LVU14
  63              		.loc 1 999 22 is_stmt 0 discriminator 2 view .LVU15
  64 0022 009B     		ldr	r3, [sp]
  65              		.loc 1 999 28 discriminator 2 view .LVU16
  66 0024 23B9     		cbnz	r3, .L2
  67              		.loc 1 999 47 discriminator 1 view .LVU17
  68 0026 019A     		ldr	r2, [sp, #4]
  69              		.loc 1 999 28 discriminator 1 view .LVU18
  70 0028 41F28833 		movw	r3, #5000
  71 002c 9A42     		cmp	r2, r3
  72 002e F0D1     		bne	.L3
  73              	.L2:
1000:./cmsis/system_stm32f10x.c **** 
1001:./cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  74              		.loc 1 1001 3 is_stmt 1 view .LVU19
  75              		.loc 1 1001 11 is_stmt 0 view .LVU20
  76 0030 234B     		ldr	r3, .L11
  77 0032 1B68     		ldr	r3, [r3]
  78              		.loc 1 1001 6 view .LVU21
  79 0034 13F4003F 		tst	r3, #131072
  80 0038 06D0     		beq	.L4
1002:./cmsis/system_stm32f10x.c ****   {
1003:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
  81              		.loc 1 1003 5 is_stmt 1 view .LVU22
ARM GAS  /tmp/cc4QVWH8.s 			page 20


  82              		.loc 1 1003 15 is_stmt 0 view .LVU23
  83 003a 0123     		movs	r3, #1
  84 003c 0093     		str	r3, [sp]
  85              	.L5:
1004:./cmsis/system_stm32f10x.c ****   }
1005:./cmsis/system_stm32f10x.c ****   else
1006:./cmsis/system_stm32f10x.c ****   {
1007:./cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
1008:./cmsis/system_stm32f10x.c ****   }  
1009:./cmsis/system_stm32f10x.c **** 
1010:./cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
  86              		.loc 1 1010 3 is_stmt 1 view .LVU24
  87              		.loc 1 1010 17 is_stmt 0 view .LVU25
  88 003e 009B     		ldr	r3, [sp]
  89              		.loc 1 1010 6 view .LVU26
  90 0040 012B     		cmp	r3, #1
  91 0042 04D0     		beq	.L10
  92              	.L1:
1011:./cmsis/system_stm32f10x.c ****   {
1012:./cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1013:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
1014:./cmsis/system_stm32f10x.c **** 
1015:./cmsis/system_stm32f10x.c ****     /* Flash 2 wait state */
1016:./cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
1017:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
1018:./cmsis/system_stm32f10x.c **** 
1019:./cmsis/system_stm32f10x.c ****  
1020:./cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1021:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
1022:./cmsis/system_stm32f10x.c ****       
1023:./cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1024:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
1025:./cmsis/system_stm32f10x.c ****     
1026:./cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1027:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
1028:./cmsis/system_stm32f10x.c **** 
1029:./cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
1030:./cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1031:./cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1032:./cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1033:./cmsis/system_stm32f10x.c ****         
1034:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1035:./cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1036:./cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1037:./cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1038:./cmsis/system_stm32f10x.c ****   
1039:./cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
1040:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1041:./cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1042:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1043:./cmsis/system_stm32f10x.c ****     {
1044:./cmsis/system_stm32f10x.c ****     }
1045:./cmsis/system_stm32f10x.c ****     
1046:./cmsis/system_stm32f10x.c ****    
1047:./cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1048:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1049:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
ARM GAS  /tmp/cc4QVWH8.s 			page 21


1050:./cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1051:./cmsis/system_stm32f10x.c **** #else    
1052:./cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1053:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
1054:./cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1055:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
1056:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1057:./cmsis/system_stm32f10x.c **** 
1058:./cmsis/system_stm32f10x.c ****     /* Enable PLL */
1059:./cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
1060:./cmsis/system_stm32f10x.c **** 
1061:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
1062:./cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
1063:./cmsis/system_stm32f10x.c ****     {
1064:./cmsis/system_stm32f10x.c ****     }
1065:./cmsis/system_stm32f10x.c ****     
1066:./cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
1067:./cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
1068:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
1069:./cmsis/system_stm32f10x.c **** 
1070:./cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1071:./cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
1072:./cmsis/system_stm32f10x.c ****     {
1073:./cmsis/system_stm32f10x.c ****     }
1074:./cmsis/system_stm32f10x.c ****   }
1075:./cmsis/system_stm32f10x.c ****   else
1076:./cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1077:./cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1078:./cmsis/system_stm32f10x.c ****   }
1079:./cmsis/system_stm32f10x.c **** }
  93              		.loc 1 1079 1 view .LVU27
  94 0044 02B0     		add	sp, sp, #8
  95              	.LCFI1:
  96              		.cfi_remember_state
  97              		.cfi_def_cfa_offset 0
  98              		@ sp needed
  99 0046 7047     		bx	lr
 100              	.L4:
 101              	.LCFI2:
 102              		.cfi_restore_state
1007:./cmsis/system_stm32f10x.c ****   }  
 103              		.loc 1 1007 5 is_stmt 1 view .LVU28
1007:./cmsis/system_stm32f10x.c ****   }  
 104              		.loc 1 1007 15 is_stmt 0 view .LVU29
 105 0048 0023     		movs	r3, #0
 106 004a 0093     		str	r3, [sp]
 107 004c F7E7     		b	.L5
 108              	.L10:
1013:./cmsis/system_stm32f10x.c **** 
 109              		.loc 1 1013 5 is_stmt 1 view .LVU30
1013:./cmsis/system_stm32f10x.c **** 
 110              		.loc 1 1013 10 is_stmt 0 view .LVU31
 111 004e 1D4B     		ldr	r3, .L11+4
 112 0050 1A68     		ldr	r2, [r3]
1013:./cmsis/system_stm32f10x.c **** 
 113              		.loc 1 1013 16 view .LVU32
 114 0052 42F01002 		orr	r2, r2, #16
ARM GAS  /tmp/cc4QVWH8.s 			page 22


 115 0056 1A60     		str	r2, [r3]
1016:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 116              		.loc 1 1016 5 is_stmt 1 view .LVU33
1016:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 117              		.loc 1 1016 10 is_stmt 0 view .LVU34
 118 0058 1A68     		ldr	r2, [r3]
1016:./cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 119              		.loc 1 1016 16 view .LVU35
 120 005a 22F00702 		bic	r2, r2, #7
 121 005e 1A60     		str	r2, [r3]
1017:./cmsis/system_stm32f10x.c **** 
 122              		.loc 1 1017 5 is_stmt 1 view .LVU36
1017:./cmsis/system_stm32f10x.c **** 
 123              		.loc 1 1017 10 is_stmt 0 view .LVU37
 124 0060 1A68     		ldr	r2, [r3]
1017:./cmsis/system_stm32f10x.c **** 
 125              		.loc 1 1017 16 view .LVU38
 126 0062 42F00202 		orr	r2, r2, #2
 127 0066 1A60     		str	r2, [r3]
1021:./cmsis/system_stm32f10x.c ****       
 128              		.loc 1 1021 5 is_stmt 1 view .LVU39
1021:./cmsis/system_stm32f10x.c ****       
 129              		.loc 1 1021 8 is_stmt 0 view .LVU40
 130 0068 A3F58053 		sub	r3, r3, #4096
 131 006c 5A68     		ldr	r2, [r3, #4]
1021:./cmsis/system_stm32f10x.c ****       
 132              		.loc 1 1021 15 view .LVU41
 133 006e 5A60     		str	r2, [r3, #4]
1024:./cmsis/system_stm32f10x.c ****     
 134              		.loc 1 1024 5 is_stmt 1 view .LVU42
1024:./cmsis/system_stm32f10x.c ****     
 135              		.loc 1 1024 8 is_stmt 0 view .LVU43
 136 0070 5A68     		ldr	r2, [r3, #4]
1024:./cmsis/system_stm32f10x.c ****     
 137              		.loc 1 1024 15 view .LVU44
 138 0072 5A60     		str	r2, [r3, #4]
1027:./cmsis/system_stm32f10x.c **** 
 139              		.loc 1 1027 5 is_stmt 1 view .LVU45
1027:./cmsis/system_stm32f10x.c **** 
 140              		.loc 1 1027 8 is_stmt 0 view .LVU46
 141 0074 5A68     		ldr	r2, [r3, #4]
1027:./cmsis/system_stm32f10x.c **** 
 142              		.loc 1 1027 15 view .LVU47
 143 0076 42F48062 		orr	r2, r2, #1024
 144 007a 5A60     		str	r2, [r3, #4]
1053:./cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 145              		.loc 1 1053 5 is_stmt 1 view .LVU48
1053:./cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 146              		.loc 1 1053 8 is_stmt 0 view .LVU49
 147 007c 5A68     		ldr	r2, [r3, #4]
1053:./cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 148              		.loc 1 1053 15 view .LVU50
 149 007e 22F47C12 		bic	r2, r2, #4128768
 150 0082 5A60     		str	r2, [r3, #4]
1055:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 151              		.loc 1 1055 5 is_stmt 1 view .LVU51
1055:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
ARM GAS  /tmp/cc4QVWH8.s 			page 23


 152              		.loc 1 1055 8 is_stmt 0 view .LVU52
 153 0084 5A68     		ldr	r2, [r3, #4]
1055:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 154              		.loc 1 1055 15 view .LVU53
 155 0086 42F4E812 		orr	r2, r2, #1900544
 156 008a 5A60     		str	r2, [r3, #4]
1059:./cmsis/system_stm32f10x.c **** 
 157              		.loc 1 1059 5 is_stmt 1 view .LVU54
1059:./cmsis/system_stm32f10x.c **** 
 158              		.loc 1 1059 8 is_stmt 0 view .LVU55
 159 008c 1A68     		ldr	r2, [r3]
1059:./cmsis/system_stm32f10x.c **** 
 160              		.loc 1 1059 13 view .LVU56
 161 008e 42F08072 		orr	r2, r2, #16777216
 162 0092 1A60     		str	r2, [r3]
1062:./cmsis/system_stm32f10x.c ****     {
 163              		.loc 1 1062 5 is_stmt 1 view .LVU57
 164              	.L7:
1064:./cmsis/system_stm32f10x.c ****     
 165              		.loc 1 1064 5 view .LVU58
1062:./cmsis/system_stm32f10x.c ****     {
 166              		.loc 1 1062 37 discriminator 1 view .LVU59
1062:./cmsis/system_stm32f10x.c ****     {
 167              		.loc 1 1062 15 is_stmt 0 discriminator 1 view .LVU60
 168 0094 0A4B     		ldr	r3, .L11
 169 0096 1B68     		ldr	r3, [r3]
1062:./cmsis/system_stm32f10x.c ****     {
 170              		.loc 1 1062 37 discriminator 1 view .LVU61
 171 0098 13F0007F 		tst	r3, #33554432
 172 009c FAD0     		beq	.L7
1067:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 173              		.loc 1 1067 5 is_stmt 1 view .LVU62
1067:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 174              		.loc 1 1067 8 is_stmt 0 view .LVU63
 175 009e 084B     		ldr	r3, .L11
 176 00a0 5A68     		ldr	r2, [r3, #4]
1067:./cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 177              		.loc 1 1067 15 view .LVU64
 178 00a2 22F00302 		bic	r2, r2, #3
 179 00a6 5A60     		str	r2, [r3, #4]
1068:./cmsis/system_stm32f10x.c **** 
 180              		.loc 1 1068 5 is_stmt 1 view .LVU65
1068:./cmsis/system_stm32f10x.c **** 
 181              		.loc 1 1068 8 is_stmt 0 view .LVU66
 182 00a8 5A68     		ldr	r2, [r3, #4]
1068:./cmsis/system_stm32f10x.c **** 
 183              		.loc 1 1068 15 view .LVU67
 184 00aa 42F00202 		orr	r2, r2, #2
 185 00ae 5A60     		str	r2, [r3, #4]
1071:./cmsis/system_stm32f10x.c ****     {
 186              		.loc 1 1071 5 is_stmt 1 view .LVU68
 187              	.L8:
1073:./cmsis/system_stm32f10x.c ****   }
 188              		.loc 1 1073 5 view .LVU69
1071:./cmsis/system_stm32f10x.c ****     {
 189              		.loc 1 1071 49 discriminator 1 view .LVU70
1071:./cmsis/system_stm32f10x.c ****     {
ARM GAS  /tmp/cc4QVWH8.s 			page 24


 190              		.loc 1 1071 16 is_stmt 0 discriminator 1 view .LVU71
 191 00b0 034B     		ldr	r3, .L11
 192 00b2 5B68     		ldr	r3, [r3, #4]
1071:./cmsis/system_stm32f10x.c ****     {
 193              		.loc 1 1071 23 discriminator 1 view .LVU72
 194 00b4 03F00C03 		and	r3, r3, #12
1071:./cmsis/system_stm32f10x.c ****     {
 195              		.loc 1 1071 49 discriminator 1 view .LVU73
 196 00b8 082B     		cmp	r3, #8
 197 00ba F9D1     		bne	.L8
 198 00bc C2E7     		b	.L1
 199              	.L12:
 200 00be 00BF     		.align	2
 201              	.L11:
 202 00c0 00100240 		.word	1073876992
 203 00c4 00200240 		.word	1073881088
 204              		.cfi_endproc
 205              	.LFE32:
 207              		.section	.text.SetSysClock,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	SetSysClock:
 214              	.LFB31:
 419:./cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 215              		.loc 1 419 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 431:./cmsis/system_stm32f10x.c **** #endif
 224              		.loc 1 431 3 view .LVU75
 225 0002 FFF7FEFF 		bl	SetSysClockTo72
 226              	.LVL0:
 436:./cmsis/system_stm32f10x.c **** 
 227              		.loc 1 436 1 is_stmt 0 view .LVU76
 228 0006 08BD     		pop	{r3, pc}
 229              		.cfi_endproc
 230              	.LFE31:
 232              		.section	.text.SystemInit,"ax",%progbits
 233              		.align	1
 234              		.global	SystemInit
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	SystemInit:
 240              	.LFB29:
 212:./cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 241              		.loc 1 212 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc4QVWH8.s 			page 25


 245 0000 08B5     		push	{r3, lr}
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 215:./cmsis/system_stm32f10x.c **** 
 250              		.loc 1 215 3 view .LVU78
 215:./cmsis/system_stm32f10x.c **** 
 251              		.loc 1 215 6 is_stmt 0 view .LVU79
 252 0002 104B     		ldr	r3, .L17
 253 0004 1A68     		ldr	r2, [r3]
 215:./cmsis/system_stm32f10x.c **** 
 254              		.loc 1 215 11 view .LVU80
 255 0006 42F00102 		orr	r2, r2, #1
 256 000a 1A60     		str	r2, [r3]
 219:./cmsis/system_stm32f10x.c **** #else
 257              		.loc 1 219 3 is_stmt 1 view .LVU81
 219:./cmsis/system_stm32f10x.c **** #else
 258              		.loc 1 219 6 is_stmt 0 view .LVU82
 259 000c 5968     		ldr	r1, [r3, #4]
 219:./cmsis/system_stm32f10x.c **** #else
 260              		.loc 1 219 13 view .LVU83
 261 000e 0E4A     		ldr	r2, .L17+4
 262 0010 0A40     		ands	r2, r2, r1
 263 0012 5A60     		str	r2, [r3, #4]
 225:./cmsis/system_stm32f10x.c **** 
 264              		.loc 1 225 3 is_stmt 1 view .LVU84
 225:./cmsis/system_stm32f10x.c **** 
 265              		.loc 1 225 6 is_stmt 0 view .LVU85
 266 0014 1A68     		ldr	r2, [r3]
 225:./cmsis/system_stm32f10x.c **** 
 267              		.loc 1 225 11 view .LVU86
 268 0016 22F08472 		bic	r2, r2, #17301504
 269 001a 22F48032 		bic	r2, r2, #65536
 270 001e 1A60     		str	r2, [r3]
 228:./cmsis/system_stm32f10x.c **** 
 271              		.loc 1 228 3 is_stmt 1 view .LVU87
 228:./cmsis/system_stm32f10x.c **** 
 272              		.loc 1 228 6 is_stmt 0 view .LVU88
 273 0020 1A68     		ldr	r2, [r3]
 228:./cmsis/system_stm32f10x.c **** 
 274              		.loc 1 228 11 view .LVU89
 275 0022 22F48022 		bic	r2, r2, #262144
 276 0026 1A60     		str	r2, [r3]
 231:./cmsis/system_stm32f10x.c **** 
 277              		.loc 1 231 3 is_stmt 1 view .LVU90
 231:./cmsis/system_stm32f10x.c **** 
 278              		.loc 1 231 6 is_stmt 0 view .LVU91
 279 0028 5A68     		ldr	r2, [r3, #4]
 231:./cmsis/system_stm32f10x.c **** 
 280              		.loc 1 231 13 view .LVU92
 281 002a 22F4FE02 		bic	r2, r2, #8323072
 282 002e 5A60     		str	r2, [r3, #4]
 250:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 283              		.loc 1 250 3 is_stmt 1 view .LVU93
 250:./cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 284              		.loc 1 250 12 is_stmt 0 view .LVU94
ARM GAS  /tmp/cc4QVWH8.s 			page 26


 285 0030 4FF41F02 		mov	r2, #10420224
 286 0034 9A60     		str	r2, [r3, #8]
 261:./cmsis/system_stm32f10x.c **** 
 287              		.loc 1 261 3 is_stmt 1 view .LVU95
 288 0036 FFF7FEFF 		bl	SetSysClock
 289              	.LVL1:
 266:./cmsis/system_stm32f10x.c **** #endif 
 290              		.loc 1 266 3 view .LVU96
 266:./cmsis/system_stm32f10x.c **** #endif 
 291              		.loc 1 266 13 is_stmt 0 view .LVU97
 292 003a 044B     		ldr	r3, .L17+8
 293 003c 4FF00062 		mov	r2, #134217728
 294 0040 9A60     		str	r2, [r3, #8]
 268:./cmsis/system_stm32f10x.c **** 
 295              		.loc 1 268 1 view .LVU98
 296 0042 08BD     		pop	{r3, pc}
 297              	.L18:
 298              		.align	2
 299              	.L17:
 300 0044 00100240 		.word	1073876992
 301 0048 0000FFF8 		.word	-117506048
 302 004c 00ED00E0 		.word	-536810240
 303              		.cfi_endproc
 304              	.LFE29:
 306              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 307              		.align	1
 308              		.global	SystemCoreClockUpdate
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	SystemCoreClockUpdate:
 314              	.LFB30:
 306:./cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 315              		.loc 1 306 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 307:./cmsis/system_stm32f10x.c **** 
 320              		.loc 1 307 3 view .LVU100
 321              	.LVL2:
 318:./cmsis/system_stm32f10x.c ****   
 322              		.loc 1 318 3 view .LVU101
 318:./cmsis/system_stm32f10x.c ****   
 323              		.loc 1 318 12 is_stmt 0 view .LVU102
 324 0000 1F4B     		ldr	r3, .L26
 325 0002 5B68     		ldr	r3, [r3, #4]
 318:./cmsis/system_stm32f10x.c ****   
 326              		.loc 1 318 7 view .LVU103
 327 0004 03F00C03 		and	r3, r3, #12
 328              	.LVL3:
 320:./cmsis/system_stm32f10x.c ****   {
 329              		.loc 1 320 3 is_stmt 1 view .LVU104
 330 0008 042B     		cmp	r3, #4
 331 000a 11D0     		beq	.L20
 332 000c 082B     		cmp	r3, #8
 333 000e 13D0     		beq	.L21
ARM GAS  /tmp/cc4QVWH8.s 			page 27


 334 0010 002B     		cmp	r3, #0
 335 0012 31D1     		bne	.L22
 323:./cmsis/system_stm32f10x.c ****       break;
 336              		.loc 1 323 7 view .LVU105
 323:./cmsis/system_stm32f10x.c ****       break;
 337              		.loc 1 323 23 is_stmt 0 view .LVU106
 338 0014 1B4B     		ldr	r3, .L26+4
 339              	.LVL4:
 323:./cmsis/system_stm32f10x.c ****       break;
 340              		.loc 1 323 23 view .LVU107
 341 0016 1C4A     		ldr	r2, .L26+8
 342 0018 1A60     		str	r2, [r3]
 324:./cmsis/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 343              		.loc 1 324 7 is_stmt 1 view .LVU108
 344              	.LVL5:
 345              	.L23:
 408:./cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 346              		.loc 1 408 3 view .LVU109
 408:./cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 347              		.loc 1 408 28 is_stmt 0 view .LVU110
 348 001a 194B     		ldr	r3, .L26
 349 001c 5B68     		ldr	r3, [r3, #4]
 408:./cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 350              		.loc 1 408 52 view .LVU111
 351 001e C3F30313 		ubfx	r3, r3, #4, #4
 408:./cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 352              		.loc 1 408 22 view .LVU112
 353 0022 1A4A     		ldr	r2, .L26+12
 354 0024 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 355              	.LVL6:
 410:./cmsis/system_stm32f10x.c **** }
 356              		.loc 1 410 3 is_stmt 1 view .LVU113
 410:./cmsis/system_stm32f10x.c **** }
 357              		.loc 1 410 19 is_stmt 0 view .LVU114
 358 0026 174A     		ldr	r2, .L26+4
 359 0028 1368     		ldr	r3, [r2]
 360 002a CB40     		lsrs	r3, r3, r1
 361 002c 1360     		str	r3, [r2]
 411:./cmsis/system_stm32f10x.c **** 
 362              		.loc 1 411 1 view .LVU115
 363 002e 7047     		bx	lr
 364              	.LVL7:
 365              	.L20:
 326:./cmsis/system_stm32f10x.c ****       break;
 366              		.loc 1 326 7 is_stmt 1 view .LVU116
 326:./cmsis/system_stm32f10x.c ****       break;
 367              		.loc 1 326 23 is_stmt 0 view .LVU117
 368 0030 144B     		ldr	r3, .L26+4
 369              	.LVL8:
 326:./cmsis/system_stm32f10x.c ****       break;
 370              		.loc 1 326 23 view .LVU118
 371 0032 154A     		ldr	r2, .L26+8
 372 0034 1A60     		str	r2, [r3]
 327:./cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 373              		.loc 1 327 7 is_stmt 1 view .LVU119
 374 0036 F0E7     		b	.L23
 375              	.LVL9:
ARM GAS  /tmp/cc4QVWH8.s 			page 28


 376              	.L21:
 331:./cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 377              		.loc 1 331 7 view .LVU120
 331:./cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 378              		.loc 1 331 20 is_stmt 0 view .LVU121
 379 0038 114A     		ldr	r2, .L26
 380 003a 5368     		ldr	r3, [r2, #4]
 381              	.LVL10:
 332:./cmsis/system_stm32f10x.c ****       
 382              		.loc 1 332 7 is_stmt 1 view .LVU122
 332:./cmsis/system_stm32f10x.c ****       
 383              		.loc 1 332 22 is_stmt 0 view .LVU123
 384 003c 5268     		ldr	r2, [r2, #4]
 385              	.LVL11:
 335:./cmsis/system_stm32f10x.c ****       
 386              		.loc 1 335 7 is_stmt 1 view .LVU124
 335:./cmsis/system_stm32f10x.c ****       
 387              		.loc 1 335 27 is_stmt 0 view .LVU125
 388 003e C3F38343 		ubfx	r3, r3, #18, #4
 389              	.LVL12:
 335:./cmsis/system_stm32f10x.c ****       
 390              		.loc 1 335 15 view .LVU126
 391 0042 0233     		adds	r3, r3, #2
 392              	.LVL13:
 337:./cmsis/system_stm32f10x.c ****       {
 393              		.loc 1 337 7 is_stmt 1 view .LVU127
 337:./cmsis/system_stm32f10x.c ****       {
 394              		.loc 1 337 10 is_stmt 0 view .LVU128
 395 0044 12F4803F 		tst	r2, #65536
 396 0048 05D1     		bne	.L24
 340:./cmsis/system_stm32f10x.c ****       }
 397              		.loc 1 340 9 is_stmt 1 view .LVU129
 340:./cmsis/system_stm32f10x.c ****       }
 398              		.loc 1 340 44 is_stmt 0 view .LVU130
 399 004a 114A     		ldr	r2, .L26+16
 400              	.LVL14:
 340:./cmsis/system_stm32f10x.c ****       }
 401              		.loc 1 340 44 view .LVU131
 402 004c 02FB03F3 		mul	r3, r2, r3
 403              	.LVL15:
 340:./cmsis/system_stm32f10x.c ****       }
 404              		.loc 1 340 25 view .LVU132
 405 0050 0C4A     		ldr	r2, .L26+4
 406 0052 1360     		str	r3, [r2]
 407 0054 E1E7     		b	.L23
 408              	.LVL16:
 409              	.L24:
 350:./cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 410              		.loc 1 350 9 is_stmt 1 view .LVU133
 350:./cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 411              		.loc 1 350 17 is_stmt 0 view .LVU134
 412 0056 0A4A     		ldr	r2, .L26
 413              	.LVL17:
 350:./cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 414              		.loc 1 350 17 view .LVU135
 415 0058 5268     		ldr	r2, [r2, #4]
 350:./cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
ARM GAS  /tmp/cc4QVWH8.s 			page 29


 416              		.loc 1 350 12 view .LVU136
 417 005a 12F4003F 		tst	r2, #131072
 418 005e 05D0     		beq	.L25
 352:./cmsis/system_stm32f10x.c ****         }
 419              		.loc 1 352 11 is_stmt 1 view .LVU137
 352:./cmsis/system_stm32f10x.c ****         }
 420              		.loc 1 352 46 is_stmt 0 view .LVU138
 421 0060 0B4A     		ldr	r2, .L26+16
 422 0062 02FB03F3 		mul	r3, r2, r3
 423              	.LVL18:
 352:./cmsis/system_stm32f10x.c ****         }
 424              		.loc 1 352 27 view .LVU139
 425 0066 074A     		ldr	r2, .L26+4
 426 0068 1360     		str	r3, [r2]
 427 006a D6E7     		b	.L23
 428              	.LVL19:
 429              	.L25:
 356:./cmsis/system_stm32f10x.c ****         }
 430              		.loc 1 356 11 is_stmt 1 view .LVU140
 356:./cmsis/system_stm32f10x.c ****         }
 431              		.loc 1 356 39 is_stmt 0 view .LVU141
 432 006c 064A     		ldr	r2, .L26+8
 433 006e 02FB03F3 		mul	r3, r2, r3
 434              	.LVL20:
 356:./cmsis/system_stm32f10x.c ****         }
 435              		.loc 1 356 27 view .LVU142
 436 0072 044A     		ldr	r2, .L26+4
 437 0074 1360     		str	r3, [r2]
 438 0076 D0E7     		b	.L23
 439              	.LVL21:
 440              	.L22:
 402:./cmsis/system_stm32f10x.c ****       break;
 441              		.loc 1 402 7 is_stmt 1 view .LVU143
 402:./cmsis/system_stm32f10x.c ****       break;
 442              		.loc 1 402 23 is_stmt 0 view .LVU144
 443 0078 024B     		ldr	r3, .L26+4
 444              	.LVL22:
 402:./cmsis/system_stm32f10x.c ****       break;
 445              		.loc 1 402 23 view .LVU145
 446 007a 034A     		ldr	r2, .L26+8
 447 007c 1A60     		str	r2, [r3]
 403:./cmsis/system_stm32f10x.c ****   }
 448              		.loc 1 403 7 is_stmt 1 view .LVU146
 449 007e CCE7     		b	.L23
 450              	.L27:
 451              		.align	2
 452              	.L26:
 453 0080 00100240 		.word	1073876992
 454 0084 00000000 		.word	SystemCoreClock
 455 0088 00127A00 		.word	8000000
 456 008c 00000000 		.word	AHBPrescTable
 457 0090 00093D00 		.word	4000000
 458              		.cfi_endproc
 459              	.LFE30:
 461              		.global	AHBPrescTable
 462              		.section	.rodata.AHBPrescTable,"a"
 463              		.align	2
ARM GAS  /tmp/cc4QVWH8.s 			page 30


 466              	AHBPrescTable:
 467 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 467      00000000 
 467      01020304 
 467      06
 468 000d 070809   		.ascii	"\007\010\011"
 469              		.global	SystemCoreClock
 470              		.section	.data.SystemCoreClock,"aw"
 471              		.align	2
 474              	SystemCoreClock:
 475 0000 00A24A04 		.word	72000000
 476              		.text
 477              	.Letext0:
 478              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 479              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 480              		.file 4 "./cmsis/core_cm3.h"
 481              		.file 5 "./cmsis/stm32f10x.h"
 482              		.file 6 "./cmsis/system_stm32f10x.h"
ARM GAS  /tmp/cc4QVWH8.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
     /tmp/cc4QVWH8.s:19     .text.SetSysClockTo72:00000000 $t
     /tmp/cc4QVWH8.s:24     .text.SetSysClockTo72:00000000 SetSysClockTo72
     /tmp/cc4QVWH8.s:202    .text.SetSysClockTo72:000000c0 $d
     /tmp/cc4QVWH8.s:208    .text.SetSysClock:00000000 $t
     /tmp/cc4QVWH8.s:213    .text.SetSysClock:00000000 SetSysClock
     /tmp/cc4QVWH8.s:233    .text.SystemInit:00000000 $t
     /tmp/cc4QVWH8.s:239    .text.SystemInit:00000000 SystemInit
     /tmp/cc4QVWH8.s:300    .text.SystemInit:00000044 $d
     /tmp/cc4QVWH8.s:307    .text.SystemCoreClockUpdate:00000000 $t
     /tmp/cc4QVWH8.s:313    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/cc4QVWH8.s:453    .text.SystemCoreClockUpdate:00000080 $d
     /tmp/cc4QVWH8.s:474    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cc4QVWH8.s:466    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/cc4QVWH8.s:463    .rodata.AHBPrescTable:00000000 $d
     /tmp/cc4QVWH8.s:471    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
